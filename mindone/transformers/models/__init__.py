# Copyright 2020 The HuggingFace Team. All rights reserved.
#
# This code is adapted from https://github.com/huggingface/transformers
# with modifications to run transformers on mindspore.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
import transformers
from packaging import version

from . import (
    albert,
    aria,
    audio_spectrogram_transformer,
    auto,
    aya_vision,
    bamba,
    bark,
    bart,
    beit,
    bert,
    bert_generation,
    big_bird,
    bigbird_pegasus,
    biogpt,
    bit,
    blip,
    blip_2,
    bloom,
    bridgetower,
    camembert,
    canine,
    chameleon,
    chinese_clip,
    clap,
    clip,
    clipseg,
    clvp,
    codegen,
    cohere,
    cohere2,
    colpali,
    convbert,
    convnext,
    convnextv2,
    ctrl,
    cvt,
    dac,
    data2vec,
    dbrx,
    deit,
    deprecated,
    depth_anything,
    depth_pro,
    diffllama,
    dinov2,
    dinov2_with_registers,
    distilbert,
    dpr,
    dpt,
    efficientnet,
    electra,
    emu3,
    encodec,
    encoder_decoder,
    ernie,
    esm,
    falcon,
    falcon_mamba,
    fastspeech2_conformer,
    flaubert,
    fnet,
    focalnet,
    fsmt,
    funnel,
    fuyu,
    gemma,
    gemma2,
    gemma3,
    git,
    glm,
    glpn,
    got_ocr2,
    gpt2,
    gpt_bigcode,
    gpt_neo,
    gpt_neox,
    gpt_neox_japanese,
    gptj,
    granite,
    granitemoe,
    granitemoeshared,
    groupvit,
    hiera,
    hubert,
    idefics,
    idefics2,
    idefics3,
    ijepa,
    imagegpt,
    instructblip,
    instructblipvideo,
    jetmoe,
    kosmos2,
    layoutlm,
    layoutlmv3,
    levit,
    lilt,
    llama,
    llava,
    llava_next,
    llava_next_video,
    llava_onevision,
    longformer,
    longt5,
    luke,
    m2m_100,
    mamba,
    mamba2,
    marian,
    markuplm,
    mask2former,
    maskformer,
    mbart,
    megatron_bert,
    mgp_str,
    mimi,
    minicpm4,
    mistral,
    mistral3,
    mixtral,
    mllama,
    mobilebert,
    mobilenet_v1,
    mobilenet_v2,
    mobilevit,
    mobilevitv2,
    modernbert,
    moonshine,
    moshi,
    mpnet,
    mpt,
    mra,
    musicgen,
    musicgen_melody,
    mvp,
    nemotron,
    nllb_moe,
    nystromformer,
    olmo,
    olmo2,
    olmoe,
    oneformer,
    opt,
    owlv2,
    owlvit,
    paligemma,
    pegasus,
    pegasus_x,
    perceiver,
    persimmon,
    phi,
    phi3,
    phimoe,
    pix2struct,
    pixtral,
    plbart,
    poolformer,
    pop2piano,
    prompt_depth_anything,
    prophetnet,
    pvt,
    pvt_v2,
    qwen2,
    qwen2_5_vl,
    qwen2_audio,
    qwen2_moe,
    qwen2_vl,
    rag,
    reformer,
    regnet,
    resnet,
    roberta,
    roberta_prelayernorm,
    roc_bert,
    roformer,
    rwkv,
    sam,
    seamless_m4t,
    seamless_m4t_v2,
    segformer,
    seggpt,
    sew,
    sew_d,
    shieldgemma2,
    siglip,
    siglip2,
    smolvlm,
    speech_encoder_decoder,
    speech_to_text,
    speecht5,
    splinter,
    squeezebert,
    stablelm,
    starcoder2,
    swiftformer,
    swin2sr,
    swinv2,
    switch_transformers,
    t5,
    table_transformer,
    tapas,
    textnet,
    timesformer,
    trocr,
    tvp,
    udop,
    umt5,
    unispeech,
    unispeech_sat,
    univnet,
    upernet,
    video_llava,
    videomae,
    vilt,
    vipllava,
    vision_encoder_decoder,
    visual_bert,
    vit,
    vit_mae,
    vit_msn,
    vitdet,
    vitmatte,
    vitpose,
    vitpose_backbone,
    vits,
    vivit,
    wav2vec2,
    wav2vec2_bert,
    wav2vec2_conformer,
    wavlm,
    x_clip,
    xglm,
    xlm,
    xlm_roberta,
    xlnet,
    xmod,
    yolos,
    yoso,
    zamba,
    zamba2,
    zoedepth,
)

if version.parse(transformers.__version__) >= version.parse("4.51.0"):
    from . import qwen3, qwen3_moe

if version.parse(transformers.__version__) >= version.parse("4.51.3"):
    from . import glm4

if version.parse(transformers.__version__) >= version.parse("4.53.0"):
    from . import glm4v, minimax, qwen2_5_omni, vjepa2
